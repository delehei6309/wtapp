{"version":3,"file":"static/js/579.7421b442.chunk.js","mappings":"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","sources":["containers/templates/page-to-pdf/Pdf.tsx","containers/templates/page-to-pdf/Html.tsx","containers/templates/page-to-pdf/index.tsx"],"sourcesContent":["// 这个页面用来转换html为pdf\nimport { Fragment, useEffect, useRef, useState } from \"react\"\nimport { getOssUrl, formatDate } from \"src/tools/operation\";\nimport pdfToImage from \"src/tools/pdf-to-image\";\n// import { pdfWidth } from \"src/configs/html-and-pdf\";\nimport Box from '@mui/material/Box';\n// import { $get2 } from \"src/tools/api\";\nimport {  useModal } from \"src/hooks\";\n// import { useParams } from \"react-router-dom\";\nimport isDate from \"date-fns/isDate\";\n\nimport { TableComponent } from 'src/components/pdf-editor/Component'\nimport { useTheme } from \"@mui/material/styles\";\ninterface ImageDisplayProps {\n    src: string;\n    template_params: any[];\n    fillValues: any;\n    // signParams: any[];\n}\nfunction ImgaeComponent({ unique_file_name, bucket_name, auto_size }:any){\n    const [src, setSrc] = useState('');\n    useEffect(() => {\n        const getUrl = async () => {\n            const url = await getOssUrl(unique_file_name, bucket_name);\n            setSrc(url);\n        }\n        if(unique_file_name){\n            getUrl();\n        }\n    }, [unique_file_name])\n    return <Box component=\"img\" sx={{width: '100%', height: '100%', ...(auto_size ? {'objectFit': 'contain' } : {})}} src={src} />\n}\nconst BoxChildren = ({ data, values }:any) => {\n    if(!data) { return null}\n    if(data.field_type === 1){\n        // 文本\n        if(data.field_specs.date_format){\n            // 日期\n            return values[data.field_key] ? formatDate(isDate(values[data.field_key]) ? values[data.field_key] : new Date(values[data.field_key]), data.field_specs.date_format) : '';\n        }\n        return values[data.field_key] || data.field_name;\n    }\n    if(data.field_type === 2){\n        // 表格\n        return <TableComponent data={data} rows={values[data.field_key]} />\n    }\n    if(data.field_type === 3){\n        // 图片\n        return values[data.field_key] ? <ImgaeComponent unique_file_name={values[data.field_key]?.unique_file_name || values[data.field_key]} bucket_name={values[data.field_key]?.bucket_name} auto_size={data.field_specs.auto_size} /> : data.field_key;\n    }\n}\nfunction ImageDisplay ({ src, template_params, fillValues }: ImageDisplayProps){\n    const theme = useTheme() as any;\n    const ref = useRef<any>(null);\n    const [height, setHeight] = useState(0);\n    useEffect(() => {\n        if(ref.current){\n            // 向下取整\n            setHeight(Math.floor(ref.current.getBoundingClientRect().height - 1)); // 为了打印的时候不会有空白\n        }\n    }, [ref.current])\n    return <Box fontSize={0}  ref={ref} \n        position=\"relative\"\n        sx={{\n            // overflow: 'hidden',\n            ...(height === 0 ? {} : { height: `${height}px`})\n        }}>\n            <img src={src} />\n            {\n                template_params.map((param, index) =>  <Box key={index} \n                    position=\"absolute\" \n                    zIndex={7} \n                    // width={param.field_type === 2 ? '100%' : param.field_specs.width} \n                    height={param.field_specs.height}\n                    left={(param.field_specs.x_coordinate * 100)+'%'}\n                    top={(param.field_specs.y_coordinate * 100)+'%'}\n                    fontSize={param.field_specs.font_size}\n                    // display={param.field_type === 2 ? 'block' : 'flex'}\n                    alignItems=\"center\"\n                    // bgcolor={param.field_type === 2 ? '#fff' : 'transparent'}\n                    // border={param.field_type === 2 ? `1px solid ${theme.palette.divider}` : 'none'}\n                    sx={ \n                        param.field_type === 2 ? {\n                            width: '100%',\n                            display: 'block',\n                            bgcolor: theme.palette.background.paper,\n                            border: `1px solid ${theme.palette.divider}`,\n                            thead: {\n                                bgcolor: theme.palette.background.default\n                            }\n                        } : {\n                            width: param.field_specs.width,\n                            display: 'flex',\n                            bgcolor: 'transparent'\n                        }\n                    }>\n                    <BoxChildren data={param} values={fillValues} />\n                </Box> )\n            }\n            {/* 签章 */}\n            {/* {\n                signParams.map((signParam:any, index:number) => <Box key={index} position=\"absolute\" zIndex={7} className=\"sign-element\" data-params={JSON.stringify(signParam)}\n                    sx={{\n                        opacity: 0,\n                        ...(signParam.signature_type === 1 ? sizeOptions.sign : (\n                            signParam.signature_type === 2 ? sizeOptions.signature : sizeOptions.signPagingSeal\n                        ))\n                    }}\n                    left={(signParam.x_coordinate * 100)+'%'}\n                    top={(signParam.y_coordinate * 100)+'%'}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                    ></Box>)\n            } */}\n        </Box>\n}\n\nconst PdfDemo = ({template, values} : { template: any;values: any; }) => {\n    const modal = useModal() as any; \n    const [canvasItems, setCanvasItems] = useState<any[]>([]);\n    useEffect(() => {\n        const start = async () => {\n            const url = await getOssUrl(template.template_info?.unique_file_name, template.template_info?.bucket_name);\n            if(url){\n                const items = await pdfToImage(url, 3, true);\n                setCanvasItems(items)\n            }\n            modal.setLoading(false);\n            \n        }\n        start()\n    }, [])\n    return <Fragment>{\n        canvasItems.map( (canvas, index) => <ImageDisplay \n            key={index} \n            src={canvas} \n            template_params={template.template_params.filter(({ field_specs }:{field_specs:any}) => field_specs.current_page === index+1)}\n            fillValues={values}\n            // signParams={signParams.filter(({current_page}) => current_page === index+1)}\n             />)\n    }</Fragment>\n}\n\nexport default PdfDemo;","import { useEffect, useRef } from \"react\";\nimport { formatDate, getOssUrl, waitForAnimationFrame, decodeEntities } from \"src/tools/operation\";\nimport isDate from \"date-fns/isDate\";\nimport Box from \"@mui/material/Box\";\ninterface IHtmlDome {\n    template: any; // 模板数据\n    values: any; // 填充数据\n\n}\nconst HtmlDome = ({ template, values}: IHtmlDome) => {\n    const ref = useRef<any>(null);\n    useEffect(() => {\n        const start = async () => {\n            await waitForAnimationFrame();\n            const customEles = ref.current.querySelectorAll('.custom-insert-element');\n            customEles.forEach((ele: any) => {\n                const params = decodeEntities(ele.getAttribute('data-params')) as any;\n                const data = JSON.parse(params);\n                if(data){\n                    const { field_key, field_type, field_specs, field_name } = data;\n                    const value = values?.[field_key];\n                    if(value){\n                        if(field_type === 1){\n                            // 文本\n                            // 移除class\n                            ele.classList.remove('custom-text-element');\n                            if(field_specs?.date_format){\n                                // 日期\n                                try{\n                                    ele.innerHTML = formatDate(isDate(value) ? value : new Date(value), field_specs.date_format);\n                                } catch(e){\n                                    ele.innerHTML = value;\n                                }\n                            }else{\n                                ele.innerHTML = value;\n                            }\n                        }\n                        if(field_type === 2 && ele.tagName === 'TABLE'){\n                            // 表格\n                            // 修改表格display\n                            // ele.style.display = 'block';\n                            // ele.style.width = '100%'\n                            console.log('field_specs', ele);\n                            const bodyTrs = value.map((row: any) => `<tr>\n                                    ${field_specs.columns.map((col: any) => `<td align=\"center\">${row[col.field_key] || '--'}</td>`).join('')}\n                                </tr>`).join('').replace(/>\\s+</g, '><');\n                            // const theadChild = '<tr>' + field_specs.columns.map((col: any) => `<th>${col.field_name}</th>`).join('') + '<tr>';\n                            // const tbodyChild = value.map((row: any) => `<tr>\n                            //         ${field_specs.columns.map((col: any) => `<td align=\"center\">${row[col.field_key] || '--'}</td>`).join('')}\n                            //     </tr>`).join('');\n                            // ele.innerHTML = `<table class=\"custom-table-element-prew\"  border-spacing=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n                            //         <thead>${theadChild}</thead>\n                            //         <tbody>${tbodyChild}</tbody>\n                            //     </table>`\n                            ele.querySelector('tbody').innerHTML = bodyTrs;\n                        }\n\n                        if(field_type === 3){\n                            // 图片\n                            getOssUrl(value?.unique_file_name || value, value?.bucket_name).then(url => {\n                                // 修改图片地址 ele\n                                ele.src = url;\n                                if(field_specs?.auto_size){\n                                    ele.style.objectFit = 'contain';\n                                }\n                            })\n                        }\n\n                        // 删除data-params\n                        ele.removeAttribute('data-params');\n                    }\n                }\n            })\n            // 隐藏签章\n            const signEles = ref.current.querySelectorAll('.custom-sign-element');\n            signEles.forEach((ele: any) => {\n                ele.style.visibility = 'hidden';\n            })\n            // 本地图片\n            ref.current.querySelectorAll('.insert-local-image').forEach(async (ele:any) => {\n                const dataParamsStr = decodeEntities(ele.getAttribute('data-params')) as any;\n                const dataParams = JSON.parse(dataParamsStr);\n                getOssUrl(dataParams.unique_file_name, dataParams.bucket_name).then((url:string) => {\n                    ele.src = url;\n                })\n    \n            })\n\n        }\n        start()\n    }, [ref])\n    return <Box  dangerouslySetInnerHTML={{ __html: template.template_info.html_info }} ref={ref} sx={{'img': { maxWidth: '100%'}}} className=\"jodit-wysiwyg\"></Box>\n}\n\nexport default HtmlDome;","// 这个页面用来转换html为pdf\nimport { useEffect, useState } from \"react\"\nimport { pdfWidth } from \"src/configs/html-and-pdf\";\nimport Box from '@mui/material/Box';\nimport { $get2 } from \"src/tools/api\";\nimport { useModal } from \"src/hooks\";\nimport { useParams } from \"react-router-dom\";\n\nimport PdfDemo from './Pdf';\nimport HtmlDome from \"./Html\";\n\n// 获取 template 信息\nconst getTemplate = async (user_id:string, template_id:string) => await $get2(`/xbd/tpl/users/${user_id}/templates/${template_id}`);\n// 获取填充PDf 数据\nconst getFillData = async (user_id:string, template_id:string, key:string) => await $get2(`/xbd/tpl/users/${user_id}/templates/${template_id}/keys/${key}`);\n\nconst getDataSync = (...args:any[]) => Promise.all(args);\n\nexport const Component = () => {\n    const modal = useModal() as any; \n    const { template_id, key, user_id } = useParams() as any;\n    const [template, setTemplate] = useState<any>({});\n    const [fillValues, setFillValues] = useState<object>({});\n    useEffect(() => {\n        const start = async () => {\n            modal.setLoading(true);\n            // 获取详情\n            const [template, fillData] = await getDataSync(getTemplate(user_id, template_id), getFillData(user_id, template_id, key));\n            if(template && fillData){\n                // console.log(template, fillData)\n                // setTemplate({...template, template_type: 2});\n                // modal.setLoading(false);\n                if(template.template_type === 2){\n                    modal.setLoading(false);\n                }\n                setTemplate(template);\n                setFillValues(fillData);\n            }else{\n                modal.setLoading(false);\n            }\n        }\n        start()\n    }, [])\n    return <Box margin=\"0 auto\" width={pdfWidth} sx={template.template_type === 1 ? {img: {width: '100%'}} : {}} id=\"html-to-pdf\">\n        {\n            template.template_type === 1 ? <PdfDemo template={template} values={fillValues} /> : null\n        }\n        {\n            template?.template_type === 2 ? <HtmlDome template={template} values={fillValues} /> : null\n        }\n    </Box>\n}"],"names":["ImgaeComponent","_ref","unique_file_name","bucket_name","auto_size","src","setSrc","useState","useEffect","async","url","getOssUrl","getUrl","_jsx","Box","component","sx","width","height","BoxChildren","_ref2","data","values","field_type","field_specs","date_format","field_key","formatDate","isDate","Date","field_name","TableComponent","rows","_values$data$field_ke","_values$data$field_ke2","ImageDisplay","_ref3","template_params","fillValues","theme","useTheme","ref","useRef","setHeight","current","Math","floor","getBoundingClientRect","_jsxs","fontSize","position","concat","children","map","param","index","zIndex","left","x_coordinate","top","y_coordinate","font_size","alignItems","display","bgcolor","palette","background","paper","border","divider","thead","default","_ref4","template","modal","useModal","canvasItems","setCanvasItems","_template$template_in","_template$template_in2","template_info","items","pdfToImage","setLoading","start","Fragment","canvas","filter","_ref5","current_page","waitForAnimationFrame","querySelectorAll","forEach","ele","params","decodeEntities","getAttribute","JSON","parse","value","classList","remove","innerHTML","e","tagName","console","log","bodyTrs","row","columns","col","join","replace","querySelector","then","style","objectFit","removeAttribute","visibility","dataParamsStr","dataParams","dangerouslySetInnerHTML","__html","html_info","maxWidth","className","Component","template_id","key","user_id","useParams","setTemplate","setFillValues","fillData","_len","arguments","length","args","Array","_key","Promise","all","getDataSync","$get2","getTemplate","getFillData","template_type","margin","pdfWidth","img","id","PdfDemo","HtmlDome"],"sourceRoot":""}